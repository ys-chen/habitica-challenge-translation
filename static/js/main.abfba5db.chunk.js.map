{"version":3,"sources":["components/TaskCard/TaskCard.jsx","components/TaskCard/index.js","routes/ChallengeDetail.jsx","components/LanguageSelector/LanguageSelector.jsx","components/LanguageSelector/index.js","components/Header/Header.jsx","components/Header/index.js","locale/i18n.js","App.jsx","serviceWorker.js","index.js"],"names":["TaskCard","text","notes","left","right","leftShape","leftColor","rightColor","className","Intro","collapsable","title","children","useState","open","setOpen","onClick","ChallengeDetail","challengeId","useParams","useTranslation","t","meta","find","officialId","state","shortName","tasksOrder","TaskColumn","taskType","some","type","filter","length","map","i","key","href","target","rel","ReactHtmlParser","marked","LanguageSelector","mainClass","i18n","defaultValue","language","onChange","event","changeLanguage","value","htmlEl","document","getElementsByTagName","setAttribute","Header","lang","use","LanguageDetector","initReactI18next","init","resources","enUS","zhCN","zhTW","fallbackLng","interpolation","escapeValue","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.abfba5db.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TaskCard.scss';\r\n\r\nfunction TaskCard({ text, notes, left = true, right = false, leftShape = 'circle', leftColor = 'info', rightColor = 'light' }) {\r\n  return (\r\n    <div className=\"d-flex bg-white position-relative taskCard\">\r\n      {left && (\r\n        <div className={`d-flex justify-content-center align-items-center flex-shrink-0 bg-${leftColor} sideBlock`}>\r\n          <i className={`fa-lock fas p-2 small ${leftColor === 'info' ? 'text-dark border-dark' : 'text-secondary border-secondary'} ${leftShape === 'circle' ? 'border border-secondary rounded-circle' : 'rounded squareBg'}`}></i>\r\n        </div>\r\n      )}\r\n      <div className=\"p-2 flex-grow-1 taskContent\">\r\n        <div className=\"pb-1 h4 mb-0 taskText\">{text}</div>\r\n        <div className=\"small mb-2 text-secondary\">{notes}</div>\r\n      </div>\r\n      {right && (\r\n        <div className={`d-flex justify-content-center align-items-center flex-shrink-0 bg-${rightColor} sideBlock`}>\r\n          <i className={`fa-lock fas p-2 small border rounded-circle ${rightColor === 'info' ? 'text-dark border-dark' : 'text-secondary border-secondary'}`}></i>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","import TaskCard from './TaskCard';\r\nexport default TaskCard;","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport marked from 'marked';\r\nimport ReactHtmlParser from 'html-react-parser';\r\nimport TaskCard from '../components/TaskCard';\r\nimport meta from '../dataset/meta.json';\r\nimport './ChallengeDetail.scss';\r\n\r\nfunction Intro({ collapsable, title, children }) {\r\n  const [open, setOpen] = useState(true);\r\n  const toggleOpen = () => { setOpen(!open); };\r\n  return (\r\n    <>\r\n      {collapsable && (\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <h3 className=\"mb-0\">{title}</h3>\r\n          <button className=\"border-0 h2 mb-0\" onClick={toggleOpen}>\r\n            {open && <i className=\"fas fa-angle-up text-secondary\" />}\r\n            {!open && <i className=\"fas fa-angle-down text-secondary\" />}\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div className={open ? 'mt-3' : 'd-none'}>\r\n        {children}\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChallengeDetail() {\r\n  const { challengeId } = useParams();\r\n  const [t] = useTranslation();\r\n  const [state] = useState(meta.find(({ officialId }) => (officialId === challengeId)));\r\n  const { shortName, tasksOrder } = state;\r\n\r\n  const TaskColumn = ({ title, taskType }) =>\r\n    tasksOrder.some((type) => type === taskType) ? (\r\n      <div className=\"col-12 col-md-6 d-flex flex-column\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <h2>{title}</h2>\r\n          <div className=\"badge badge-pill mx-1 mb-2 font-weight-bold badgePurple\">{` ${tasksOrder.filter((type) => type === taskType).length} `}</div>\r\n        </div>\r\n        <div className=\"bg-light flex-grow-1 taskList\">\r\n          {tasksOrder.map((type, i) => type === taskType ? (\r\n            <TaskCard\r\n              key={type + i}\r\n              type={type}\r\n              text={t(`${shortName}task${i}text`)}\r\n              notes={t(`${shortName}task${i}notes`)}\r\n              right={taskType === 'habit'}\r\n              leftShape={taskType === 'habit' ? 'circle' : 'square'}\r\n            />) : '')}\r\n        </div>\r\n      </div>\r\n    ) : '';\r\n\r\n  return state && (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 col-lg-8 p-4\">\r\n        <h1 className=\"text-primary\">{t(`${shortName}name`)}</h1>\r\n        <div className=\"row\">\r\n          <TaskColumn title={t('habits')} taskType=\"habit\" />\r\n          <TaskColumn title={t('dailies')} taskType=\"daily\" />\r\n          <TaskColumn title={t('todos')} taskType=\"todo\" />\r\n          <TaskColumn title={t('rewards')} taskType=\"rewards\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-lg-4 bg-light pt-4\">\r\n        <a\r\n          className=\"btn btn-success w-100\"\r\n          href=\"https://habitica.com/challenges/8d6e280a-4dc8-4957-b2b4-feb07ce9ff6b\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\">\r\n          {t('toChallengePage')}\r\n        </a>\r\n        <hr />\r\n        <Intro collapsable title={t('summary')}>\r\n          <p>{t(`${shortName}summary`)}</p>\r\n        </Intro>\r\n        <Intro collapsable title={t('description')}>\r\n        {ReactHtmlParser(marked(t(`${shortName}description`)))}\r\n        </Intro>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChallengeDetail;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction LanguageSelector({ mainClass }) {\r\n  const [, i18n] = useTranslation();\r\n  const changeLanguage = (event) => {\r\n    i18n.changeLanguage(event.target.value);\r\n    const htmlEl = document.getElementsByTagName('html');\r\n    if (htmlEl && htmlEl.length > 0) {\r\n      htmlEl[0].setAttribute('lang', i18n.language);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <select className=\"custom-select\" defaultValue={i18n.language} onChange={changeLanguage}>\r\n      <option value=\"zh-CN\">简体中文</option>\r\n      <option value=\"zh-TW\">正體中文</option>\r\n      <option value=\"en-US\">English</option>\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default LanguageSelector;","import LanguageSelector from './LanguageSelector';\r\nexport default LanguageSelector;","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport LanguageSelector from '../LanguageSelector';\r\nimport './Header.scss';\r\n\r\nfunction Header({ changeLanguage, lang }) {\r\n  return (\r\n    <nav className=\"navbar position-relative bg-light justify-content-end header\">\r\n      {/* <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" to=\"/detail/8d6e280a-4dc8-4957-b2b4-feb07ce9ff6b\">BTS2020 - Detail</Link>\r\n        </li>\r\n      </ul> */}\r\n      <form className=\"form-inline flex-nowrap align-items-center\">\r\n        <i className=\"h2 mb-0 mr-2 text-primary fas fa-globe\"></i>\r\n        <LanguageSelector mainClass=\"\" changeLanguage={changeLanguage} lang={lang} />\r\n      </form>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import Header from './Header';\r\n\r\nexport default Header;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport zhCN from \"./zh-CN.json\";\r\nimport zhTW from \"./zh-TW.json\";\r\nimport enUS from \"./en-US.json\";\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      'en-US': enUS,\r\n      'zh-CN': zhCN,\r\n      'zh-TW': zhTW,\r\n    },\r\n    fallbackLng: 'en-US',\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\nconst htmlEl = document.getElementsByTagName('html');\r\nif (htmlEl && htmlEl.length > 0) {\r\n  htmlEl[0].setAttribute('lang', i18n.language);\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport ChallengeDetail from './routes/ChallengeDetail';\r\nimport Header from './components/Header'\r\nimport './locale/i18n';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Header />\r\n        <div className=\"container-fluid\">\r\n          <Switch>\r\n            <Route path=\"/detail/:challengeId\">\r\n              <ChallengeDetail />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}